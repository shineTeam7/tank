package com.home.base.data.scene.unit;
import com.home.base.constlist.generate.GBaseDataType;
import com.home.commonBase.data.scene.base.DirData;
import com.home.commonBase.data.scene.unit.UnitPosData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** g单位位置数据(generated by shine) */
public class GUnitPosData extends UnitPosData
{
	/** 数据类型ID */
	public static final int dataID=GBaseDataType.GUnitPos;
	
	/** 射击朝向 */
	public DirData shootDir;
	
	public GUnitPosData()
	{
		_dataID=GBaseDataType.GUnitPos;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "GUnitPosData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		if(stream.readBoolean())
		{
			this.shootDir=new DirData();
			this.shootDir.readBytesFull(stream);
		}
		else
		{
			this.shootDir=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.shootDir!=null)
		{
			stream.writeBoolean(true);
			this.shootDir.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.shootDir=new DirData();
			this.shootDir.readBytesSimple(stream);
		}
		else
		{
			this.shootDir=null;
		}
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.shootDir!=null)
		{
			stream.writeBoolean(true);
			this.shootDir.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		super.toShadowCopy(data);
		
		if(!(data instanceof GUnitPosData))
			return;
		
		GUnitPosData mData=(GUnitPosData)data;
		
		this.shootDir=mData.shootDir;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		super.toCopy(data);
		
		if(!(data instanceof GUnitPosData))
			return;
		
		GUnitPosData mData=(GUnitPosData)data;
		
		if(mData.shootDir!=null)
		{
			this.shootDir=new DirData();
			this.shootDir.copy(mData.shootDir);
		}
		else
		{
			this.shootDir=null;
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		if(!super.toDataEquals(data))
			return false;
		
		GUnitPosData mData=(GUnitPosData)data;
		if(mData.shootDir!=null)
		{
			if(this.shootDir==null)
				return false;
			if(!this.shootDir.dataEquals(mData.shootDir))
				return false;
		}
		else
		{
			if(this.shootDir!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("shootDir");
		writer.sb.append(':');
		if(this.shootDir!=null)
		{
			this.shootDir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		super.initDefault();
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.shootDir=null;
	}
	
}
