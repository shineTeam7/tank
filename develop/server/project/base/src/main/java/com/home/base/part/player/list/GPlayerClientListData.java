package com.home.base.part.player.list;
import com.home.base.constlist.generate.GPlayerListClientDataType;
import com.home.base.part.player.clientData.GBagClientPartData;
import com.home.base.part.player.clientData.GCharacterClientPartData;
import com.home.base.part.player.clientData.GFriendClientPartData;
import com.home.base.part.player.clientData.GFuncClientPartData;
import com.home.base.part.player.clientData.GRoleClientPartData;
import com.home.base.part.player.clientData.GSceneClientPartData;
import com.home.base.part.player.clientData.GTeamClientPartData;
import com.home.base.part.player.clientData.GUnionClientPartData;
import com.home.commonBase.part.player.clientData.ActivityClientPartData;
import com.home.commonBase.part.player.clientData.FriendClientPartData;
import com.home.commonBase.part.player.clientData.FuncClientPartData;
import com.home.commonBase.part.player.clientData.GuideClientPartData;
import com.home.commonBase.part.player.clientData.MailClientPartData;
import com.home.commonBase.part.player.clientData.PetClientPartData;
import com.home.commonBase.part.player.clientData.QuestClientPartData;
import com.home.commonBase.part.player.clientData.SceneClientPartData;
import com.home.commonBase.part.player.clientData.SocialClientPartData;
import com.home.commonBase.part.player.clientData.SystemClientPartData;
import com.home.commonBase.part.player.list.PlayerClientListData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 玩家数据主体(generated by shine) */
public class GPlayerClientListData extends PlayerClientListData
{
	/** 数据类型ID */
	public static final int dataID=GPlayerListClientDataType.GPlayer;
	
	/** 功能 */
	public GFuncClientPartData gfunc;
	
	/** 角色 */
	public GRoleClientPartData grole;
	
	/** 场景 */
	public GSceneClientPartData gscene;
	
	/** 角色 */
	public GCharacterClientPartData gcharacter;
	
	/** 背包 */
	public GBagClientPartData gbag;
	
	/** 工会 */
	public GUnionClientPartData gunion;
	
	/** 好友 */
	public GFriendClientPartData gfriend;
	
	/** 组队 */
	public GTeamClientPartData gteam;
	
	public GPlayerClientListData()
	{
		_dataID=GPlayerListClientDataType.GPlayer;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "GPlayerClientListData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData systemT=stream.readDataFullNotNull();
		if(systemT!=null)
		{
			if(systemT instanceof SystemClientPartData)
			{
				this.system=(SystemClientPartData)systemT;
			}
			else
			{
				this.system=new SystemClientPartData();
				if(!(systemT.getClass().isAssignableFrom(SystemClientPartData.class)))
				{
					stream.throwTypeReadError(SystemClientPartData.class,systemT.getClass());
				}
				this.system.shadowCopy(systemT);
			}
		}
		else
		{
			this.system=null;
		}
		
		BaseData gfuncT=stream.readDataFullNotNull();
		if(gfuncT!=null)
		{
			if(gfuncT instanceof GFuncClientPartData)
			{
				this.gfunc=(GFuncClientPartData)gfuncT;
			}
			else
			{
				this.gfunc=new GFuncClientPartData();
				if(!(gfuncT.getClass().isAssignableFrom(GFuncClientPartData.class)))
				{
					stream.throwTypeReadError(GFuncClientPartData.class,gfuncT.getClass());
				}
				this.gfunc.shadowCopy(gfuncT);
			}
		}
		else
		{
			this.gfunc=null;
		}
		
		BaseData activityT=stream.readDataFullNotNull();
		if(activityT!=null)
		{
			if(activityT instanceof ActivityClientPartData)
			{
				this.activity=(ActivityClientPartData)activityT;
			}
			else
			{
				this.activity=new ActivityClientPartData();
				if(!(activityT.getClass().isAssignableFrom(ActivityClientPartData.class)))
				{
					stream.throwTypeReadError(ActivityClientPartData.class,activityT.getClass());
				}
				this.activity.shadowCopy(activityT);
			}
		}
		else
		{
			this.activity=null;
		}
		
		BaseData groleT=stream.readDataFullNotNull();
		if(groleT!=null)
		{
			if(groleT instanceof GRoleClientPartData)
			{
				this.grole=(GRoleClientPartData)groleT;
			}
			else
			{
				this.grole=new GRoleClientPartData();
				if(!(groleT.getClass().isAssignableFrom(GRoleClientPartData.class)))
				{
					stream.throwTypeReadError(GRoleClientPartData.class,groleT.getClass());
				}
				this.grole.shadowCopy(groleT);
			}
		}
		else
		{
			this.grole=null;
		}
		
		BaseData gsceneT=stream.readDataFullNotNull();
		if(gsceneT!=null)
		{
			if(gsceneT instanceof GSceneClientPartData)
			{
				this.gscene=(GSceneClientPartData)gsceneT;
			}
			else
			{
				this.gscene=new GSceneClientPartData();
				if(!(gsceneT.getClass().isAssignableFrom(GSceneClientPartData.class)))
				{
					stream.throwTypeReadError(GSceneClientPartData.class,gsceneT.getClass());
				}
				this.gscene.shadowCopy(gsceneT);
			}
		}
		else
		{
			this.gscene=null;
		}
		
		BaseData gcharacterT=stream.readDataFullNotNull();
		if(gcharacterT!=null)
		{
			if(gcharacterT instanceof GCharacterClientPartData)
			{
				this.gcharacter=(GCharacterClientPartData)gcharacterT;
			}
			else
			{
				this.gcharacter=new GCharacterClientPartData();
				if(!(gcharacterT.getClass().isAssignableFrom(GCharacterClientPartData.class)))
				{
					stream.throwTypeReadError(GCharacterClientPartData.class,gcharacterT.getClass());
				}
				this.gcharacter.shadowCopy(gcharacterT);
			}
		}
		else
		{
			this.gcharacter=null;
		}
		
		BaseData socialT=stream.readDataFullNotNull();
		if(socialT!=null)
		{
			if(socialT instanceof SocialClientPartData)
			{
				this.social=(SocialClientPartData)socialT;
			}
			else
			{
				this.social=new SocialClientPartData();
				if(!(socialT.getClass().isAssignableFrom(SocialClientPartData.class)))
				{
					stream.throwTypeReadError(SocialClientPartData.class,socialT.getClass());
				}
				this.social.shadowCopy(socialT);
			}
		}
		else
		{
			this.social=null;
		}
		
		BaseData gbagT=stream.readDataFullNotNull();
		if(gbagT!=null)
		{
			if(gbagT instanceof GBagClientPartData)
			{
				this.gbag=(GBagClientPartData)gbagT;
			}
			else
			{
				this.gbag=new GBagClientPartData();
				if(!(gbagT.getClass().isAssignableFrom(GBagClientPartData.class)))
				{
					stream.throwTypeReadError(GBagClientPartData.class,gbagT.getClass());
				}
				this.gbag.shadowCopy(gbagT);
			}
		}
		else
		{
			this.gbag=null;
		}
		
		BaseData mailT=stream.readDataFullNotNull();
		if(mailT!=null)
		{
			if(mailT instanceof MailClientPartData)
			{
				this.mail=(MailClientPartData)mailT;
			}
			else
			{
				this.mail=new MailClientPartData();
				if(!(mailT.getClass().isAssignableFrom(MailClientPartData.class)))
				{
					stream.throwTypeReadError(MailClientPartData.class,mailT.getClass());
				}
				this.mail.shadowCopy(mailT);
			}
		}
		else
		{
			this.mail=null;
		}
		
		BaseData questT=stream.readDataFullNotNull();
		if(questT!=null)
		{
			if(questT instanceof QuestClientPartData)
			{
				this.quest=(QuestClientPartData)questT;
			}
			else
			{
				this.quest=new QuestClientPartData();
				if(!(questT.getClass().isAssignableFrom(QuestClientPartData.class)))
				{
					stream.throwTypeReadError(QuestClientPartData.class,questT.getClass());
				}
				this.quest.shadowCopy(questT);
			}
		}
		else
		{
			this.quest=null;
		}
		
		BaseData guideT=stream.readDataFullNotNull();
		if(guideT!=null)
		{
			if(guideT instanceof GuideClientPartData)
			{
				this.guide=(GuideClientPartData)guideT;
			}
			else
			{
				this.guide=new GuideClientPartData();
				if(!(guideT.getClass().isAssignableFrom(GuideClientPartData.class)))
				{
					stream.throwTypeReadError(GuideClientPartData.class,guideT.getClass());
				}
				this.guide.shadowCopy(guideT);
			}
		}
		else
		{
			this.guide=null;
		}
		
		BaseData gfriendT=stream.readDataFullNotNull();
		if(gfriendT!=null)
		{
			if(gfriendT instanceof GFriendClientPartData)
			{
				this.gfriend=(GFriendClientPartData)gfriendT;
			}
			else
			{
				this.gfriend=new GFriendClientPartData();
				if(!(gfriendT.getClass().isAssignableFrom(GFriendClientPartData.class)))
				{
					stream.throwTypeReadError(GFriendClientPartData.class,gfriendT.getClass());
				}
				this.gfriend.shadowCopy(gfriendT);
			}
		}
		else
		{
			this.gfriend=null;
		}
		
		BaseData gunionT=stream.readDataFullNotNull();
		if(gunionT!=null)
		{
			if(gunionT instanceof GUnionClientPartData)
			{
				this.gunion=(GUnionClientPartData)gunionT;
			}
			else
			{
				this.gunion=new GUnionClientPartData();
				if(!(gunionT.getClass().isAssignableFrom(GUnionClientPartData.class)))
				{
					stream.throwTypeReadError(GUnionClientPartData.class,gunionT.getClass());
				}
				this.gunion.shadowCopy(gunionT);
			}
		}
		else
		{
			this.gunion=null;
		}
		
		BaseData gteamT=stream.readDataFullNotNull();
		if(gteamT!=null)
		{
			if(gteamT instanceof GTeamClientPartData)
			{
				this.gteam=(GTeamClientPartData)gteamT;
			}
			else
			{
				this.gteam=new GTeamClientPartData();
				if(!(gteamT.getClass().isAssignableFrom(GTeamClientPartData.class)))
				{
					stream.throwTypeReadError(GTeamClientPartData.class,gteamT.getClass());
				}
				this.gteam.shadowCopy(gteamT);
			}
		}
		else
		{
			this.gteam=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.system!=null)
		{
			stream.writeDataFullNotNull(this.system);
		}
		else
		{
			nullObjError("system");
		}
		
		if(this.gfunc!=null)
		{
			stream.writeDataFullNotNull(this.gfunc);
		}
		else
		{
			nullObjError("gfunc");
		}
		
		if(this.activity!=null)
		{
			stream.writeDataFullNotNull(this.activity);
		}
		else
		{
			nullObjError("activity");
		}
		
		if(this.grole!=null)
		{
			stream.writeDataFullNotNull(this.grole);
		}
		else
		{
			nullObjError("grole");
		}
		
		if(this.gscene!=null)
		{
			stream.writeDataFullNotNull(this.gscene);
		}
		else
		{
			nullObjError("gscene");
		}
		
		if(this.gcharacter!=null)
		{
			stream.writeDataFullNotNull(this.gcharacter);
		}
		else
		{
			nullObjError("gcharacter");
		}
		
		if(this.social!=null)
		{
			stream.writeDataFullNotNull(this.social);
		}
		else
		{
			nullObjError("social");
		}
		
		if(this.gbag!=null)
		{
			stream.writeDataFullNotNull(this.gbag);
		}
		else
		{
			nullObjError("gbag");
		}
		
		if(this.mail!=null)
		{
			stream.writeDataFullNotNull(this.mail);
		}
		else
		{
			nullObjError("mail");
		}
		
		if(this.quest!=null)
		{
			stream.writeDataFullNotNull(this.quest);
		}
		else
		{
			nullObjError("quest");
		}
		
		if(this.guide!=null)
		{
			stream.writeDataFullNotNull(this.guide);
		}
		else
		{
			nullObjError("guide");
		}
		
		if(this.gfriend!=null)
		{
			stream.writeDataFullNotNull(this.gfriend);
		}
		else
		{
			nullObjError("gfriend");
		}
		
		if(this.gunion!=null)
		{
			stream.writeDataFullNotNull(this.gunion);
		}
		else
		{
			nullObjError("gunion");
		}
		
		if(this.gteam!=null)
		{
			stream.writeDataFullNotNull(this.gteam);
		}
		else
		{
			nullObjError("gteam");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.system=(SystemClientPartData)stream.readDataSimpleNotNull();
		
		this.gfunc=(GFuncClientPartData)stream.readDataSimpleNotNull();
		
		this.activity=(ActivityClientPartData)stream.readDataSimpleNotNull();
		
		this.grole=(GRoleClientPartData)stream.readDataSimpleNotNull();
		
		this.gscene=(GSceneClientPartData)stream.readDataSimpleNotNull();
		
		this.gcharacter=(GCharacterClientPartData)stream.readDataSimpleNotNull();
		
		this.social=(SocialClientPartData)stream.readDataSimpleNotNull();
		
		this.gbag=(GBagClientPartData)stream.readDataSimpleNotNull();
		
		this.mail=(MailClientPartData)stream.readDataSimpleNotNull();
		
		this.quest=(QuestClientPartData)stream.readDataSimpleNotNull();
		
		this.guide=(GuideClientPartData)stream.readDataSimpleNotNull();
		
		this.gfriend=(GFriendClientPartData)stream.readDataSimpleNotNull();
		
		this.gunion=(GUnionClientPartData)stream.readDataSimpleNotNull();
		
		this.gteam=(GTeamClientPartData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.system!=null)
		{
			stream.writeDataSimpleNotNull(this.system);
		}
		else
		{
			nullObjError("system");
		}
		
		if(this.gfunc!=null)
		{
			stream.writeDataSimpleNotNull(this.gfunc);
		}
		else
		{
			nullObjError("gfunc");
		}
		
		if(this.activity!=null)
		{
			stream.writeDataSimpleNotNull(this.activity);
		}
		else
		{
			nullObjError("activity");
		}
		
		if(this.grole!=null)
		{
			stream.writeDataSimpleNotNull(this.grole);
		}
		else
		{
			nullObjError("grole");
		}
		
		if(this.gscene!=null)
		{
			stream.writeDataSimpleNotNull(this.gscene);
		}
		else
		{
			nullObjError("gscene");
		}
		
		if(this.gcharacter!=null)
		{
			stream.writeDataSimpleNotNull(this.gcharacter);
		}
		else
		{
			nullObjError("gcharacter");
		}
		
		if(this.social!=null)
		{
			stream.writeDataSimpleNotNull(this.social);
		}
		else
		{
			nullObjError("social");
		}
		
		if(this.gbag!=null)
		{
			stream.writeDataSimpleNotNull(this.gbag);
		}
		else
		{
			nullObjError("gbag");
		}
		
		if(this.mail!=null)
		{
			stream.writeDataSimpleNotNull(this.mail);
		}
		else
		{
			nullObjError("mail");
		}
		
		if(this.quest!=null)
		{
			stream.writeDataSimpleNotNull(this.quest);
		}
		else
		{
			nullObjError("quest");
		}
		
		if(this.guide!=null)
		{
			stream.writeDataSimpleNotNull(this.guide);
		}
		else
		{
			nullObjError("guide");
		}
		
		if(this.gfriend!=null)
		{
			stream.writeDataSimpleNotNull(this.gfriend);
		}
		else
		{
			nullObjError("gfriend");
		}
		
		if(this.gunion!=null)
		{
			stream.writeDataSimpleNotNull(this.gunion);
		}
		else
		{
			nullObjError("gunion");
		}
		
		if(this.gteam!=null)
		{
			stream.writeDataSimpleNotNull(this.gteam);
		}
		else
		{
			nullObjError("gteam");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof GPlayerClientListData))
			return;
		
		GPlayerClientListData mData=(GPlayerClientListData)data;
		
		this.system=mData.system;
		this.gfunc=mData.gfunc;
		this.activity=mData.activity;
		this.grole=mData.grole;
		this.gscene=mData.gscene;
		this.gcharacter=mData.gcharacter;
		this.social=mData.social;
		this.gbag=mData.gbag;
		this.mail=mData.mail;
		this.quest=mData.quest;
		this.guide=mData.guide;
		this.gfriend=mData.gfriend;
		this.gunion=mData.gunion;
		this.gteam=mData.gteam;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof GPlayerClientListData))
			return;
		
		GPlayerClientListData mData=(GPlayerClientListData)data;
		
		if(mData.system!=null)
		{
			this.system=(SystemClientPartData)mData.system.clone();
		}
		else
		{
			this.system=null;
			nullObjError("system");
		}
		
		if(mData.gfunc!=null)
		{
			this.gfunc=(GFuncClientPartData)mData.gfunc.clone();
		}
		else
		{
			this.gfunc=null;
			nullObjError("gfunc");
		}
		
		if(mData.activity!=null)
		{
			this.activity=(ActivityClientPartData)mData.activity.clone();
		}
		else
		{
			this.activity=null;
			nullObjError("activity");
		}
		
		if(mData.grole!=null)
		{
			this.grole=(GRoleClientPartData)mData.grole.clone();
		}
		else
		{
			this.grole=null;
			nullObjError("grole");
		}
		
		if(mData.gscene!=null)
		{
			this.gscene=(GSceneClientPartData)mData.gscene.clone();
		}
		else
		{
			this.gscene=null;
			nullObjError("gscene");
		}
		
		if(mData.gcharacter!=null)
		{
			this.gcharacter=(GCharacterClientPartData)mData.gcharacter.clone();
		}
		else
		{
			this.gcharacter=null;
			nullObjError("gcharacter");
		}
		
		if(mData.social!=null)
		{
			this.social=(SocialClientPartData)mData.social.clone();
		}
		else
		{
			this.social=null;
			nullObjError("social");
		}
		
		if(mData.gbag!=null)
		{
			this.gbag=(GBagClientPartData)mData.gbag.clone();
		}
		else
		{
			this.gbag=null;
			nullObjError("gbag");
		}
		
		if(mData.mail!=null)
		{
			this.mail=(MailClientPartData)mData.mail.clone();
		}
		else
		{
			this.mail=null;
			nullObjError("mail");
		}
		
		if(mData.quest!=null)
		{
			this.quest=(QuestClientPartData)mData.quest.clone();
		}
		else
		{
			this.quest=null;
			nullObjError("quest");
		}
		
		if(mData.guide!=null)
		{
			this.guide=(GuideClientPartData)mData.guide.clone();
		}
		else
		{
			this.guide=null;
			nullObjError("guide");
		}
		
		if(mData.gfriend!=null)
		{
			this.gfriend=(GFriendClientPartData)mData.gfriend.clone();
		}
		else
		{
			this.gfriend=null;
			nullObjError("gfriend");
		}
		
		if(mData.gunion!=null)
		{
			this.gunion=(GUnionClientPartData)mData.gunion.clone();
		}
		else
		{
			this.gunion=null;
			nullObjError("gunion");
		}
		
		if(mData.gteam!=null)
		{
			this.gteam=(GTeamClientPartData)mData.gteam.clone();
		}
		else
		{
			this.gteam=null;
			nullObjError("gteam");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		GPlayerClientListData mData=(GPlayerClientListData)data;
		if(mData.system!=null)
		{
			if(this.system==null)
				return false;
			if(!this.system.dataEquals(mData.system))
				return false;
		}
		else
		{
			if(this.system!=null)
				return false;
		}
		
		if(mData.gfunc!=null)
		{
			if(this.gfunc==null)
				return false;
			if(!this.gfunc.dataEquals(mData.gfunc))
				return false;
		}
		else
		{
			if(this.gfunc!=null)
				return false;
		}
		
		if(mData.activity!=null)
		{
			if(this.activity==null)
				return false;
			if(!this.activity.dataEquals(mData.activity))
				return false;
		}
		else
		{
			if(this.activity!=null)
				return false;
		}
		
		if(mData.grole!=null)
		{
			if(this.grole==null)
				return false;
			if(!this.grole.dataEquals(mData.grole))
				return false;
		}
		else
		{
			if(this.grole!=null)
				return false;
		}
		
		if(mData.gscene!=null)
		{
			if(this.gscene==null)
				return false;
			if(!this.gscene.dataEquals(mData.gscene))
				return false;
		}
		else
		{
			if(this.gscene!=null)
				return false;
		}
		
		if(mData.gcharacter!=null)
		{
			if(this.gcharacter==null)
				return false;
			if(!this.gcharacter.dataEquals(mData.gcharacter))
				return false;
		}
		else
		{
			if(this.gcharacter!=null)
				return false;
		}
		
		if(mData.social!=null)
		{
			if(this.social==null)
				return false;
			if(!this.social.dataEquals(mData.social))
				return false;
		}
		else
		{
			if(this.social!=null)
				return false;
		}
		
		if(mData.gbag!=null)
		{
			if(this.gbag==null)
				return false;
			if(!this.gbag.dataEquals(mData.gbag))
				return false;
		}
		else
		{
			if(this.gbag!=null)
				return false;
		}
		
		if(mData.mail!=null)
		{
			if(this.mail==null)
				return false;
			if(!this.mail.dataEquals(mData.mail))
				return false;
		}
		else
		{
			if(this.mail!=null)
				return false;
		}
		
		if(mData.quest!=null)
		{
			if(this.quest==null)
				return false;
			if(!this.quest.dataEquals(mData.quest))
				return false;
		}
		else
		{
			if(this.quest!=null)
				return false;
		}
		
		if(mData.guide!=null)
		{
			if(this.guide==null)
				return false;
			if(!this.guide.dataEquals(mData.guide))
				return false;
		}
		else
		{
			if(this.guide!=null)
				return false;
		}
		
		if(mData.gfriend!=null)
		{
			if(this.gfriend==null)
				return false;
			if(!this.gfriend.dataEquals(mData.gfriend))
				return false;
		}
		else
		{
			if(this.gfriend!=null)
				return false;
		}
		
		if(mData.gunion!=null)
		{
			if(this.gunion==null)
				return false;
			if(!this.gunion.dataEquals(mData.gunion))
				return false;
		}
		else
		{
			if(this.gunion!=null)
				return false;
		}
		
		if(mData.gteam!=null)
		{
			if(this.gteam==null)
				return false;
			if(!this.gteam.dataEquals(mData.gteam))
				return false;
		}
		else
		{
			if(this.gteam!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("system");
		writer.sb.append(':');
		if(this.system!=null)
		{
			this.system.writeDataString(writer);
		}
		else
		{
			writer.sb.append("SystemClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gfunc");
		writer.sb.append(':');
		if(this.gfunc!=null)
		{
			this.gfunc.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GFuncClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("activity");
		writer.sb.append(':');
		if(this.activity!=null)
		{
			this.activity.writeDataString(writer);
		}
		else
		{
			writer.sb.append("ActivityClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("grole");
		writer.sb.append(':');
		if(this.grole!=null)
		{
			this.grole.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GRoleClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gscene");
		writer.sb.append(':');
		if(this.gscene!=null)
		{
			this.gscene.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GSceneClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gcharacter");
		writer.sb.append(':');
		if(this.gcharacter!=null)
		{
			this.gcharacter.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GCharacterClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("social");
		writer.sb.append(':');
		if(this.social!=null)
		{
			this.social.writeDataString(writer);
		}
		else
		{
			writer.sb.append("SocialClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gbag");
		writer.sb.append(':');
		if(this.gbag!=null)
		{
			this.gbag.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GBagClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("mail");
		writer.sb.append(':');
		if(this.mail!=null)
		{
			this.mail.writeDataString(writer);
		}
		else
		{
			writer.sb.append("MailClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("quest");
		writer.sb.append(':');
		if(this.quest!=null)
		{
			this.quest.writeDataString(writer);
		}
		else
		{
			writer.sb.append("QuestClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("guide");
		writer.sb.append(':');
		if(this.guide!=null)
		{
			this.guide.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GuideClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gfriend");
		writer.sb.append(':');
		if(this.gfriend!=null)
		{
			this.gfriend.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GFriendClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gunion");
		writer.sb.append(':');
		if(this.gunion!=null)
		{
			this.gunion.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GUnionClientPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gteam");
		writer.sb.append(':');
		if(this.gteam!=null)
		{
			this.gteam.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GTeamClientPartData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.system=null;
		this.gfunc=null;
		this.activity=null;
		this.grole=null;
		this.gscene=null;
		this.gcharacter=null;
		this.social=null;
		this.gbag=null;
		this.mail=null;
		this.quest=null;
		this.guide=null;
		this.gfriend=null;
		this.gunion=null;
		this.gteam=null;
	}
	
}
