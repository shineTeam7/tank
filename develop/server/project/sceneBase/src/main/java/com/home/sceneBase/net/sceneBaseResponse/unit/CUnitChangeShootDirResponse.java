package com.home.sceneBase.net.sceneBaseResponse.unit;
import com.home.commonBase.data.scene.base.DirData;
import com.home.commonSceneBase.net.sceneBaseResponse.base.CUnitRResponse;
import com.home.sceneBase.constlist.generate.GSceneBaseResponseType;
import com.home.sceneBase.scene.unit.GUnitPosLogic;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 控制单位改变设计朝向消息(generated by shine) */
public class CUnitChangeShootDirResponse extends CUnitRResponse
{
	/** 数据类型ID */
	public static final int dataID=GSceneBaseResponseType.CUnitChangeShootDir;
	
	/** 朝向 */
	public DirData dir;
	
	public CUnitChangeShootDirResponse()
	{
		_dataID=GSceneBaseResponseType.CUnitChangeShootDir;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CUnitChangeShootDirResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.dir=new DirData();
			this.dir.readBytesSimple(stream);
		}
		else
		{
			this.dir=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("dir");
		writer.sb.append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.dir=null;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		((GUnitPosLogic)unit.pos).onChangeShootDir(dir);
	}
	
}
