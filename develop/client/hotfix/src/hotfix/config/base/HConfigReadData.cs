using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
[Hotfix]
public class HConfigReadData:GConfigReadData
{
	/// <summary>
	/// 构造常量size
	/// </summary>
	public override void makeConstSize()
	{
		base.makeConstSize();
		
	}
	
	/// <summary>
	/// 设置值到Config上
	/// </summary>
	public override void setToConfigOne(int type)
	{
		base.setToConfigOne(type);
		
		switch(type)
		{
			case ConfigType.Global:
			{
				HGlobal.readFromData((HGlobalReadData)global);
				HGlobal.afterReadConfig();
			}
				break;
		}
	}
	
	/// <summary>
	/// 读完所有配置
	/// </summary>
	public override void afterReadConfigAllOne(int type)
	{
		base.afterReadConfigAllOne(type);
		
		switch(type)
		{
			case ConfigType.Global:
			{
				HGlobal.afterReadConfigAll();
			}
				break;
		}
	}
	
	/// <summary>
	/// 从流读取单个
	/// </summary>
	protected override void readBytesOne(int type,BytesReadStream stream)
	{
		base.readBytesOne(type,stream);
		
	}
	
	/// <summary>
	/// 刷新数据
	/// </summary>
	public override void refreshDataOne(int type)
	{
		base.refreshDataOne(type);
		
	}
	
	/// <summary>
	/// 读取全局配置表
	/// </summary>
	protected override void readGlobal(BytesReadStream stream)
	{
		global=new HGlobalReadData();
		global.readBytesSimple(stream);
	}
	
	/// <summary>
	/// 添加到Config上
	/// </summary>
	public override void addToConfigOne(int type)
	{
		base.addToConfigOne(type);
		
		switch(type)
		{
		}
	}
	
}
