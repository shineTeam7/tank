using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class HFightUI:GameUIBase
{
	/// <summary>
	/// 玩家对象
	/// </summary>
	public HPlayer hme=HGameC.player;
	
	/** UI模型 */
	private UIModel_fightUI _model;

	private JoystickLogic _joyLogicLeft;
	
	private JoystickLogic _joyLogicRight;
	
	protected override UIModel createModel()
	{
		return _model=new UIModel_fightUI();
	}
	
	protected override void registLogics()
	{
		base.registLogics();

		_joyLogicLeft=new JoystickLogic();
		_joyLogicLeft.id=1;
		addLogic(_joyLogicLeft);
		
		_joyLogicRight=new JoystickLogic();
		_joyLogicRight.id=2;
		_joyLogicRight.setCanKeyboardOperate(false);
		addLogic(_joyLogicRight);
	}
	
	protected override void init()
	{
		base.init();

		//绑定节点
		_joyLogicLeft.setNode(_model.joystickLeft);

		_joyLogicLeft.startFunc=GameC.scene.heroStartMoveDir;
		_joyLogicLeft.progressFunc=GameC.scene.heroMoveDir;
		_joyLogicLeft.stopFunc=GameC.scene.heroCancelMoveDir;
		
		//绑定节点
		_joyLogicRight.setNode(_model.joystickRight);

		_joyLogicRight.startFunc=GGameC.scene.heroStartShootDir;
		_joyLogicRight.progressFunc=GGameC.scene.heroShootDir;
		_joyLogicRight.stopFunc=GGameC.scene.heroCancelShootDir;
	}
	
	protected override void dispose()
	{
		base.dispose();
		
	}
	
	protected override void onEnter()
	{
		base.onEnter();
		
	}
	
	protected override void onExit()
	{
		base.onExit();
		
	}
}
