using ShineEngine;

/// <summary>
/// 界面表(generated by shine)
/// </summary>
public class GUIConfig:UIConfig
{
	/** 存储集合 */
	private static IntObjectMap<GUIConfig> _dic;
	
	/// <summary>
	/// 需要加载的资源包
	/// </summary>
	public string[] loadResources;
	
	/// <summary>
	/// 需要加载的资源包(资源转)
	/// </summary>
	public int[] loadResourcesT;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static GUIConfig getG(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setGDic(IntObjectMap<GUIConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addGDic(IntObjectMap<GUIConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<GUIConfig> getGDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		int loadResourcesLen=stream.readLen();
		if(this.loadResources==null || this.loadResources.Length!=loadResourcesLen)
		{
			this.loadResources=new string[loadResourcesLen];
		}
		string[] loadResourcesT=this.loadResources;
		for(int loadResourcesI=0;loadResourcesI<loadResourcesLen;++loadResourcesI)
		{
			string loadResourcesV;
			loadResourcesV=stream.readUTF();
			
			loadResourcesT[loadResourcesI]=loadResourcesV;
		}
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		if(this.loadResources!=null)
		{
			string[] loadResourcesT=this.loadResources;
			stream.writeLen(loadResourcesT.Length);
			for(int loadResourcesVI=0,loadResourcesVLen=loadResourcesT.Length;loadResourcesVI<loadResourcesVLen;++loadResourcesVI)
			{
				string loadResourcesV=loadResourcesT[loadResourcesVI];
				stream.writeUTF(loadResourcesV);
				
			}
		}
		else
		{
			nullObjError("loadResources");
		}
		
	}
	
	/// <summary>
	/// 生成刷新配置
	/// </summary>
	protected override void generateRefresh()
	{
		base.generateRefresh();
		
		loadResourcesT=LoadControl.getResourceIDsByNames(loadResources);
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
}
