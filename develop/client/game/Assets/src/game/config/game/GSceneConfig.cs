using ShineEngine;

/// <summary>
/// 场景表(generated by shine)
/// </summary>
public class GSceneConfig:SceneConfig
{
	/** 存储集合 */
	private static IntObjectMap<GSceneConfig> _dic;
	
	/// <summary>
	/// 场景全部离开策略
	/// </summary>
	public int allLeaveType;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static GSceneConfig getG(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setGDic(IntObjectMap<GSceneConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addGDic(IntObjectMap<GSceneConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<GSceneConfig> getGDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.allLeaveType=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.allLeaveType);
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
}
