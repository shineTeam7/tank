using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class UnitChangeShootDirResponse:UnitSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GSceneBaseResponseType.UnitChangeShootDir;
	
	/// <summary>
	/// 朝向
	/// </summary>
	public DirData dir;
	
	public UnitChangeShootDirResponse()
	{
		_dataID=GSceneBaseResponseType.UnitChangeShootDir;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "UnitChangeShootDirResponse";
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.dir=(DirData)stream.createData(DirData.dataID);
			this.dir.readBytesSimple(stream);
		}
		else
		{
			this.dir=null;
		}
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("dir");
		writer.sb.Append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("DirData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.dir=null;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		((GUnitPosLogic)unit.pos).setShootDirByServer(dir);
	}
	
}
